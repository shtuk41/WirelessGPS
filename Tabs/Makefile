#############################################################################
# Makefile for building: Tabs
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sat May 11 09:08:52 2013
# Project:  Tabs.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile Tabs.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = comm.cpp \
		controller.cpp \
		main.cpp \
		mtk_nmea.cpp \
		nmea.cpp \
		tabgga.cpp \
		tabgll.cpp \
		tabgsa.cpp \
		tabgsv.cpp \
		tabmain.cpp \
		tabrmc.cpp \
		tabs.cpp \
		tabscommon.cpp \
		tabvtg.cpp moc_tabs.cpp
OBJECTS       = comm.o \
		controller.o \
		main.o \
		mtk_nmea.o \
		nmea.o \
		tabgga.o \
		tabgll.o \
		tabgsa.o \
		tabgsv.o \
		tabmain.o \
		tabrmc.o \
		tabs.o \
		tabscommon.o \
		tabvtg.o \
		moc_tabs.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Tabs.pro
QMAKE_TARGET  = Tabs
DESTDIR       = 
TARGET        = Tabs

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Tabs.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile Tabs.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile Tabs.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Tabs1.0.0 || $(MKDIR) .tmp/Tabs1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Tabs1.0.0/ && $(COPY_FILE) --parents comm.h controller.h mtk_nmea.h nmea.h nmea_errors.h tabs.h tabs_message.h .tmp/Tabs1.0.0/ && $(COPY_FILE) --parents comm.cpp controller.cpp main.cpp mtk_nmea.cpp nmea.cpp tabgga.cpp tabgll.cpp tabgsa.cpp tabgsv.cpp tabmain.cpp tabrmc.cpp tabs.cpp tabscommon.cpp tabvtg.cpp .tmp/Tabs1.0.0/ && (cd `dirname .tmp/Tabs1.0.0` && $(TAR) Tabs1.0.0.tar Tabs1.0.0 && $(COMPRESS) Tabs1.0.0.tar) && $(MOVE) `dirname .tmp/Tabs1.0.0`/Tabs1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Tabs1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_tabs.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_tabs.cpp
moc_tabs.cpp: controller.h \
		nmea.h \
		tabs.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) tabs.h -o moc_tabs.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

comm.o: comm.cpp comm.h \
		tabs_message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o comm.o comm.cpp

controller.o: controller.cpp controller.h \
		nmea.h \
		tabs_message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o controller.o controller.cpp

main.o: main.cpp controller.h \
		nmea.h \
		tabs.h \
		comm.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mtk_nmea.o: mtk_nmea.cpp mtk_nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mtk_nmea.o mtk_nmea.cpp

nmea.o: nmea.cpp nmea.h \
		mtk_nmea.h \
		nmea_errors.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o nmea.o nmea.cpp

tabgga.o: tabgga.cpp tabs.h \
		controller.h \
		nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tabgga.o tabgga.cpp

tabgll.o: tabgll.cpp tabs.h \
		controller.h \
		nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tabgll.o tabgll.cpp

tabgsa.o: tabgsa.cpp tabs.h \
		controller.h \
		nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tabgsa.o tabgsa.cpp

tabgsv.o: tabgsv.cpp tabs.h \
		controller.h \
		nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tabgsv.o tabgsv.cpp

tabmain.o: tabmain.cpp tabs.h \
		controller.h \
		nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tabmain.o tabmain.cpp

tabrmc.o: tabrmc.cpp tabs.h \
		controller.h \
		nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tabrmc.o tabrmc.cpp

tabs.o: tabs.cpp tabs.h \
		controller.h \
		nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tabs.o tabs.cpp

tabscommon.o: tabscommon.cpp tabs.h \
		controller.h \
		nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tabscommon.o tabscommon.cpp

tabvtg.o: tabvtg.cpp tabs.h \
		controller.h \
		nmea.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tabvtg.o tabvtg.cpp

moc_tabs.o: moc_tabs.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_tabs.o moc_tabs.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

